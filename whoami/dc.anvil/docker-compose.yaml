services:
  whoami:
    image: {{ .Vars.images.whoami.name }}:{{ .Vars.images.whoami.version }}
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=traefik_web'
      - 'traefik.http.services.whoami.loadbalancer.server.port=8080'
      - 'traefik.http.routers.whoami.entrypoints=web'
      - 'traefik.http.routers.whoami.rule=Host(`{{ .Vars.service.whoami.host }}`)'
      - 'traefik.http.routers.whoami.service=whoami@docker'
      - 'traefik.http.middlewares.whoami-ratelimit.ratelimit.average=15'
      - 'traefik.http.middlewares.whoami-ratelimit.ratelimit.burst=15'
      - 'traefik.http.middlewares.whoami-ratelimit.ratelimit.period=15'
      - 'traefik.http.routers.whoami.middlewares=whoami-ratelimit@docker{{ if .Vars.service.whoami.tls }},whoami-redirect@docker{{ end }}'
{{- if .Vars.service.whoami.tls }}
      - 'traefik.http.middlewares.whoami-redirect.redirectscheme.scheme=https'
      - 'traefik.http.middlewares.whoami-redirect.redirectscheme.permanent=true'
      - 'traefik.http.routers.whoami-secure.entrypoints=web-secure'
      - 'traefik.http.routers.whoami-secure.tls=true'
      - 'traefik.http.routers.whoami-secure.tls.certresolver=certresolver'
      - 'traefik.http.routers.whoami-secure.rule=Host(`{{ .Vars.service.whoami.host }}`)'
{{- end }}
    networks:
      - default
      - traefik_web
    restart: unless-stopped

networks:
  traefik_web:
    external: true
