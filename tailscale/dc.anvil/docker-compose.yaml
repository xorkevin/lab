services:
  postgres:
    image: {{ .Vars.images.postgres.name }}:{{ .Vars.images.postgres.version }}
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_INITDB_ARGS: '--encoding UTF8 --auth-local=trust --auth-host=scram-sha-256'
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      LANG: C
    ports:
      - 5434:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
  headscale:
    image: {{ .Vars.images.headscale.name }}:{{ .Vars.images.headscale.version }}
    entrypoint: ['headscale']
    command: ['serve']
    environment:
      HEADSCALE_DB_PASS: "${POSTGRES_PASSWORD}"
      HEADSCALE_OIDC_CLIENT_ID: "${OIDC_CLIENT_ID}"
      HEADSCALE_OIDC_CLIENT_SECRET: "${OIDC_CLIENT_SECRET}"
    volumes:
      - ./headscaleconfig:/etc/headscale:ro
      - ../../dc.run/headscale/key:/etc/headscalekey
      - ../../dc.run/headscale/run:/var/run
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=traefik_web'
      - 'traefik.http.services.headscale.loadbalancer.server.port=8080'
      - 'traefik.http.routers.headscale.entrypoints=web'
      - 'traefik.http.routers.headscale.rule=Host(`{{ .Vars.service.headscale.host }}`)'
      - 'traefik.http.routers.headscale.service=headscale@docker'
      - 'traefik.http.middlewares.headscale-ratelimit.ratelimit.average=240'
      - 'traefik.http.middlewares.headscale-ratelimit.ratelimit.burst=240'
      - 'traefik.http.middlewares.headscale-ratelimit.ratelimit.period=15'
      - 'traefik.http.routers.headscale.middlewares=headscale-ratelimit@docker{{ if .Vars.service.headscale.tls }},headscale-redirect@docker{{ end }}'
{{- if .Vars.service.headscale.tls }}
      - 'traefik.http.middlewares.headscale-redirect.redirectscheme.scheme=https'
      - 'traefik.http.middlewares.headscale-redirect.redirectscheme.permanent=true'
      - 'traefik.http.routers.headscale-secure.entrypoints=web-secure'
      - 'traefik.http.routers.headscale-secure.tls=true'
      - 'traefik.http.routers.headscale-secure.tls.certresolver=certresolver'
      - 'traefik.http.routers.headscale-secure.rule=Host(`{{ .Vars.service.headscale.host }}`)'
      - 'traefik.http.routers.headscale-secure.middlewares=headscale-ratelimit@docker'
{{- end }}
    networks:
      - default
      - traefik_web
    depends_on:
      - postgres
{{- if .Vars.service.derp.enabled }}
      - derper
{{- end }}
    restart: unless-stopped
    extra_hosts:
      - governor.dev.localhost:host-gateway
{{- if .Vars.service.derp.enabled }}
  derper:
    image: {{ .Vars.images.derper.name }}:{{ .Vars.images.derper.version }}
    entrypoint: ['/home/derper/derper']
    command:
      - '-c'
      - '/var/lib/derper/data/derper.key'
      - '-a'
      - ':8080'
      - '--stun'
      - '--verify-clients'
{{- if .Vars.service.derp.manualtls }}
      - '--certmode'
      - 'manual'
      - '--certdir'
      - '/etc/derper/certs'
      - '--hostname'
      - '{{ .Vars.service.derp.manualtlsdomain }}'
{{- end }}
    ports:
      - 3478:3478/udp
{{- if .Vars.service.derp.manualtls }}
      - 8084:8080
{{- end }}
    volumes:
      - ../../dc.run/derper/data:/var/lib/derper/data
      - /var/run/tailscale:/var/run/tailscale:ro
{{- if .Vars.service.derp.manualtls }}
      - ../../dc.run/derper/cert:/etc/derper/certs:ro
{{- end }}
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=traefik_web'
      - 'traefik.http.services.derp.loadbalancer.server.port=8080'
      - 'traefik.http.routers.derp.entrypoints=web'
      - 'traefik.http.routers.derp.rule=Host(`{{ .Vars.service.derp.host }}`)'
      - 'traefik.http.routers.derp.service=derp@docker'
      - 'traefik.http.middlewares.derp-ratelimit.ratelimit.average=240'
      - 'traefik.http.middlewares.derp-ratelimit.ratelimit.burst=240'
      - 'traefik.http.middlewares.derp-ratelimit.ratelimit.period=15'
      - 'traefik.http.routers.derp.middlewares=derp-ratelimit@docker{{ if .Vars.service.derp.tls }},derp-redirect@docker{{ end }}'
{{- if .Vars.service.derp.tls }}
      - 'traefik.http.middlewares.derp-redirect.redirectscheme.scheme=https'
      - 'traefik.http.middlewares.derp-redirect.redirectscheme.permanent=true'
      - 'traefik.http.routers.derp-secure.entrypoints=web-secure'
      - 'traefik.http.routers.derp-secure.tls=true'
      - 'traefik.http.routers.derp-secure.tls.certresolver=certresolver'
      - 'traefik.http.routers.derp-secure.rule=Host(`{{ .Vars.service.derp.host }}`)'
      - 'traefik.http.routers.derp-secure.middlewares=derp-ratelimit@docker'
{{- end }}
    networks:
      - default
      - traefik_web
    restart: unless-stopped
{{- end }}

volumes:
  pgdata: {}

networks:
  traefik_web:
    external: true
